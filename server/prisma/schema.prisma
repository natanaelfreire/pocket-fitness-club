generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cliente {
  id               String   @id @default(uuid())
  nome             String
  cpf              String   @unique
  dataNascimento   DateTime
  endereco         String
  telefone         String
  dataMensalidade  DateTime
  valorMensalidade Decimal
  ativo            Boolean
  dataCriacao      DateTime @default(now())

  usuario      Usuario?
  agendamentos Agendamento[]
  recebimentos Recebimento[]
  fichasTreino FichaTreino[]

  @@map("cliente")
}

model Colaborador {
  id            String   @id @default(uuid())
  nome          String
  cpf           String   @unique
  endereco      String
  telefone      String
  especialidade String?
  formacao      String?
  cargo         String
  dataCriacao   DateTime @default(now())

  usuario      Usuario?
  turmas       Turma[]
  fichasTreino FichaTreino[]

  @@map("colaborador")
}

model Usuario {
  id           String @id @default(uuid())
  nome         String
  email        String
  senha        String
  perfilAcesso String

  cliente       Cliente?     @relation(fields: [clienteId], references: [id])
  clienteId     String?      @unique
  colaborador   Colaborador? @relation(fields: [colaboradorId], references: [id])
  colaboradorId String?      @unique

  @@map("usuario")
}

model Modalidade {
  id          Int      @id @default(autoincrement())
  descricao   String
  dataCriacao DateTime @default(now())

  turmas       Turma[]
  fichasTreino FichaTreino[]

  @@map("modalidade")
}

model Turma {
  id         Int      @id @default(autoincrement())
  capacidade Int
  horaInicio DateTime
  horaFim    DateTime

  modalidade    Modalidade    @relation(fields: [modalidadeId], references: [id])
  modalidadeId  Int
  colaborador   Colaborador   @relation(fields: [colaboradorId], references: [id])
  colaboradorId String
  agendamentos  Agendamento[]

  @@map("turma")
}

model Agendamento {
  id              Int      @id @default(autoincrement())
  dataAgendamento DateTime
  cancelado       Boolean
  usuarioCadastro String

  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId String
  turma     Turma   @relation(fields: [turmaId], references: [id])
  turmaId   Int

  @@map("agendamento")
}

model Info {
  id        Int    @id @default(autoincrement())
  nome      String
  endereco  String
  horarios  String
  telefone  String
  facebook  String
  instagram String

  @@map("info")
}

model Recebimento {
  id              Int      @id @default(autoincrement())
  descricao       String
  dataRecebimento DateTime
  valor           Decimal
  referencia      String
  dataCadastro    DateTime @default(now())

  cliente   Cliente? @relation(fields: [clienteId], references: [id])
  clienteId String?

  @@map("recebimento")
}

model Pagamento {
  id            Int      @id @default(autoincrement())
  descricao     String
  dataPagamento DateTime
  valor         Decimal
  dataCadastro  DateTime @default(now())

  @@map("pagamento")
}

model FichaTreino {
  id           Int      @id @default(autoincrement())
  descricao    String
  dataCadastro DateTime @default(now())

  divisoesTreino DivisaoTreino[]

  colaborador   Colaborador @relation(fields: [colaboradorId], references: [id])
  colaboradorId String
  cliente       Cliente?    @relation(fields: [clienteId], references: [id])
  clienteId     String
  modalidade    Modalidade  @relation(fields: [modalidadeId], references: [id])
  modalidadeId  Int

  @@map("ficha_treino")
}

model DivisaoTreino {
  id        Int    @id @default(autoincrement())
  descricao String

  exerciciosFichaTreino ExercicioFichaTreino[]

  fichaTreino   FichaTreino @relation(fields: [fichaTreinoId], references: [id])
  fichaTreinoId Int

  @@map("divisao_treino")
}

model ExercicioFichaTreino {
  id            Int     @id @default(autoincrement())
  descricao     String
  grupoMuscular String
  peso          Decimal
  repeticoes    Int
  series        Int
  observacao    String

  divisaoTreino   DivisaoTreino @relation(fields: [divisaoTreinoId], references: [id])
  divisaoTreinoId Int

  @@map("exercicio_ficha_treino")
}

model AtividadesSistema {
  id           Int      @id @default(autoincrement())
  descricao    String
  dataCadastro DateTime @default(now())

  @@map("atividades_sistema")
}
